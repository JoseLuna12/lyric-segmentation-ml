# Test configuration for POS-SSM feature
# Quick test configuration with POS-SSM enabled

# Dataset Configuration
data:
  train_file: "data/train.jsonl"
  val_file: "data/val.jsonl" 
  test_file: "data/test.jsonl"
  
# Model Architecture
model:
  feature_dim: 48  # Auto-computed from feature config (head_ssm: 12 + tail_ssm: 12 + phonetic_ssm: 12 + pos_ssm: 12)
  hidden_dim: 128
  num_classes: 2
  dropout: 0.4
  
# Training Parameters (quick test)
training:
  batch_size: 8
  learning_rate: 0.001
  weight_decay: 0.01
  max_epochs: 5  # Quick test
  patience: 3
  gradient_clip_norm: 1.0
  
# Anti-Collapse Configuration
anti_collapse:
  label_smoothing: 0.2
  weighted_sampling: true
  entropy_lambda: 0.0
  
# Emergency Monitoring
emergency_monitoring:
  enabled: false  # Disabled for quick test
  
# Feature Configuration with POS-SSM enabled
features:
  head_ssm:
    enabled: true
    output_dim: 12
    head_words: 2
  tail_ssm:
    enabled: true
    output_dim: 12
    tail_words: 2
  phonetic_ssm:
    enabled: true
    output_dim: 12
    mode: "rhyme"
  pos_ssm:
    enabled: true
    output_dim: 12
    tagset: "universal"  # Options: "simplified", "universal", "penn"
    similarity_method: "lcs"  # Options: "combined", "lcs", "position", "jaccard"
    high_sim_threshold: 0.6  # Threshold for high similarity (lower for POS vs phonetic)
  
# Output Configuration
output:
  base_dir: "training_sessions"
  save_best_model: true
  save_final_model: true
  save_training_metrics: true
  
# System Configuration
system:
  seed: 42
  device: "auto"
  num_workers: 4
  
# Experiment Metadata
experiment:
  name: "pos_ssm_test"
  description: "Testing POS-SSM feature integration with grammatical structure analysis"
  tags: ["test", "pos_ssm", "grammatical_structure"]
  notes: "Quick test to verify POS-SSM feature works in training pipeline"
